/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.vizual.viz.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.vizual.viz.Command;
import org.xtext.example.vizual.viz.EndHtmlCommand;
import org.xtext.example.vizual.viz.HtmlCommand;
import org.xtext.example.vizual.viz.VizPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Command</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.vizual.viz.impl.CommandImpl#getHtml <em>Html</em>}</li>
 *   <li>{@link org.xtext.example.vizual.viz.impl.CommandImpl#getEndHtml <em>End Html</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CommandImpl extends MinimalEObjectImpl.Container implements Command
{
  /**
   * The default value of the '{@link #getHtml() <em>Html</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHtml()
   * @generated
   * @ordered
   */
  protected static final HtmlCommand HTML_EDEFAULT = HtmlCommand.HTML;

  /**
   * The cached value of the '{@link #getHtml() <em>Html</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHtml()
   * @generated
   * @ordered
   */
  protected HtmlCommand html = HTML_EDEFAULT;

  /**
   * The default value of the '{@link #getEndHtml() <em>End Html</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndHtml()
   * @generated
   * @ordered
   */
  protected static final EndHtmlCommand END_HTML_EDEFAULT = EndHtmlCommand.END_HTML;

  /**
   * The cached value of the '{@link #getEndHtml() <em>End Html</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndHtml()
   * @generated
   * @ordered
   */
  protected EndHtmlCommand endHtml = END_HTML_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CommandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VizPackage.Literals.COMMAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HtmlCommand getHtml()
  {
    return html;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHtml(HtmlCommand newHtml)
  {
    HtmlCommand oldHtml = html;
    html = newHtml == null ? HTML_EDEFAULT : newHtml;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VizPackage.COMMAND__HTML, oldHtml, html));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EndHtmlCommand getEndHtml()
  {
    return endHtml;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndHtml(EndHtmlCommand newEndHtml)
  {
    EndHtmlCommand oldEndHtml = endHtml;
    endHtml = newEndHtml == null ? END_HTML_EDEFAULT : newEndHtml;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VizPackage.COMMAND__END_HTML, oldEndHtml, endHtml));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VizPackage.COMMAND__HTML:
        return getHtml();
      case VizPackage.COMMAND__END_HTML:
        return getEndHtml();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VizPackage.COMMAND__HTML:
        setHtml((HtmlCommand)newValue);
        return;
      case VizPackage.COMMAND__END_HTML:
        setEndHtml((EndHtmlCommand)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VizPackage.COMMAND__HTML:
        setHtml(HTML_EDEFAULT);
        return;
      case VizPackage.COMMAND__END_HTML:
        setEndHtml(END_HTML_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VizPackage.COMMAND__HTML:
        return html != HTML_EDEFAULT;
      case VizPackage.COMMAND__END_HTML:
        return endHtml != END_HTML_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (html: ");
    result.append(html);
    result.append(", endHtml: ");
    result.append(endHtml);
    result.append(')');
    return result.toString();
  }

} //CommandImpl
